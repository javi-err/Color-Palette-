[{"C:\\Users\\jsmar\\Code Projects\\Projects\\color-palette\\src\\index.js":"1","C:\\Users\\jsmar\\Code Projects\\Projects\\color-palette\\src\\App.js":"2","C:\\Users\\jsmar\\Code Projects\\Projects\\color-palette\\src\\reportWebVitals.js":"3","C:\\Users\\jsmar\\Code Projects\\Projects\\color-palette\\src\\ColorSeed.js":"4","C:\\Users\\jsmar\\Code Projects\\Projects\\color-palette\\src\\Palette.js":"5","C:\\Users\\jsmar\\Code Projects\\Projects\\color-palette\\src\\ColorBox.js":"6","C:\\Users\\jsmar\\Code Projects\\Projects\\color-palette\\src\\ColorHelper.js":"7","C:\\Users\\jsmar\\Code Projects\\Projects\\color-palette\\src\\Navbar.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":379,"mtime":1607896853395,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":10549,"mtime":1607620843291,"results":"13","hashOfConfig":"10"},{"size":1581,"mtime":1608703246837,"results":"14","hashOfConfig":"10"},{"size":1392,"mtime":1608139953786,"results":"15","hashOfConfig":"10"},{"size":1307,"mtime":1608152610193,"results":"16","hashOfConfig":"10"},{"size":2957,"mtime":1608684610835,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"10kvlvi",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},"C:\\Users\\jsmar\\Code Projects\\Projects\\color-palette\\src\\index.js",[],["36","37"],"C:\\Users\\jsmar\\Code Projects\\Projects\\color-palette\\src\\App.js",[],"C:\\Users\\jsmar\\Code Projects\\Projects\\color-palette\\src\\reportWebVitals.js",[],"C:\\Users\\jsmar\\Code Projects\\Projects\\color-palette\\src\\ColorSeed.js",[],"C:\\Users\\jsmar\\Code Projects\\Projects\\color-palette\\src\\Palette.js",[],"C:\\Users\\jsmar\\Code Projects\\Projects\\color-palette\\src\\ColorBox.js",[],"C:\\Users\\jsmar\\Code Projects\\Projects\\color-palette\\src\\ColorHelper.js",[],"C:\\Users\\jsmar\\Code Projects\\Projects\\color-palette\\src\\Navbar.js",["38"],"import React, { Component } from 'react'\r\nimport 'rc-slider/assets/index.css'\r\nimport './Palette.css'\r\nimport Slider from 'rc-slider'\r\nimport './Navbar.css'\r\nimport Select from '@material-ui/core/Select'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport IconButton from '@material-ui/core/IconButton'\r\n\r\nexport class Navbar extends Component {\r\n    constructor(){\r\n        super()\r\n\r\n        this.state = {\r\n            format: 'hex',\r\n            open: false\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleClose = this.handleClose.bind(this)\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({\r\n            format: e.target.value,\r\n            open: true,\r\n        })\r\n\r\n        this.props.handleFormatChange(e.target.value)\r\n    }\r\n\r\n    handleClose(){\r\n        this.setState({\r\n            open: false,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {level, handleLevelChange} = this.props\r\n        const { format } = this.state\r\n        return (\r\n            <nav className=\"Navbar\">\r\n                <div className=\"home\">\r\n                    <a href=\"#\">Color Palette</a>\r\n                </div>\r\n\r\n                <div className=\"slider-container\">\r\n                    <span>Brightness Level: {level}</span>\r\n                    <div className=\"slider\">\r\n                        <Slider \r\n                        defaultValue={level} \r\n                        min={100} max={900} step={100} \r\n                        onAfterChange={handleLevelChange} \r\n                        />\r\n                    </div>  \r\n                </div>\r\n\r\n                <div className=\"color-select\">\r\n                    <Select value={format} onChange={this.handleChange}>\r\n                        <MenuItem value='hex'>HEX - #ffffff</MenuItem>\r\n                        <MenuItem value='rgb'>RGB - rgb(255, 255, 255)</MenuItem>\r\n                        <MenuItem value='rgba'>RGBA - rgba(255, 255, 255, 1)</MenuItem>\r\n                    </Select>\r\n                </div>\r\n\r\n                <Snackbar \r\n                anchorOrigin={{vertical: \"bottom\", horizontal: \"left\"}} \r\n                open={this.state.open}\r\n                autoHideDuration={3000}\r\n                message={<span id=\"message-id\">Format changed to {format}</span>}\r\n                onClose={this.handleClose}\r\n                ContentProps={{\r\n                    \"aria-describedby\": \"message-id\"\r\n                }}\r\n                action={[\r\n                    <IconButton \r\n                    onClick={this.handleClose} \r\n                    color=\"inherit\" \r\n                    key=\"close\" \r\n                    aria-label=\"close\">\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                ]}\r\n\r\n                />\r\n\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar\r\n",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":46,"column":21,"nodeType":"45","endLine":46,"endColumn":33},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]